<?php

if (!defined("STDERR")) {
    $_stderr = fopen("php://stderr","w");
    define("STDERR", $_stderr);
}
define("DEBUG_BOOTSTRAP", getenv("DEBUG_BOOTSTRAP")==1);

if (DEBUG_BOOTSTRAP) {
    $_serverinfo = []; foreach($_SERVER as $k=>$v) $_serverinfo[] = "{$k}: {$v}";
    fprintf(STDERR,join("\n",$_serverinfo));
}

$findlib = function() {
    $bootfile = "lib/_bootstrap.php";
    if (DEBUG_BOOTSTRAP) fprintf(STDERR,"FindLib: Searching for {$bootfile}...\n");
    if (defined("CHERRY_LIB")) {
        fprintf(STDERR,"Testing %s/{$bootfile}\n", CHERRY_LIB);
        if (file_exists(CHERRY_LIB."/".$bootfile))
            return CHERRY_LIB;
    }
    $_env = getenv("CHERRY_LIB");
    if ($_env) {
        if (DEBUG_BOOTSTRAP) fprintf(STDERR,"FindLib: Testing %s/{$bootfile}\n", $_env);
        if (file_exists($_env."/".$bootfile))
            return $_env;
    }
    $_init = $_SERVER["SCRIPT_FILENAME"];
    while(strlen($_init) > 1) {
        if (DEBUG_BOOTSTRAP) fprintf(STDERR,"FindLib: Testing %s/{$bootfile}\n", $_init);
        if (file_exists($_init."/".$bootfile))
            return $_init;
        $_init = dirname($_init);
    }
    $_dir = __DIR__;
    while(strlen($_dir) > 1) {
        if (DEBUG_BOOTSTRAP) fprintf(STDERR,"FindLib:Testing %s/{$bootfile}\n", $_dir);
        if (file_exists($_dir."/".$bootfile)) {
            return $_dir;
        }
        $_dir = dirname($_dir);
    }
    throw new \Exception("Unable to find CherryPHP bootstrap file");
};

$findapp = function() {
    $appfiles = [ "config/application.sdl", "application.sdl", "application.json", "config/_setup.php", "lib/_bootstrap.php", ".cherryphp" ];
    while(count($appfiles)>0) {
        $appfile = array_shift($appfiles);
        if (DEBUG_BOOTSTRAP) fprintf(STDERR,"FindApp: Searching for {$appfile}...\n");
        if (defined("CHERRY_APP")) {
            if (DEBUG_BOOTSTRAP) fprintf(STDERR,"FindApp: Testing %s/{$appfile}\n", CHERRY_APP);
            if (file_exists(CHERRY_APP."/".$appfile))
                return CHERRY_APP;
        }
        $_env = getenv("CHERRY_APP");
        if ($_env) {
            if (DEBUG_BOOTSTRAP) fprintf(STDERR,"FindApp: Testing %s/{$appfile}\n", $_env);
            if (file_exists($_env."/".$appfile))
                return $_env;
        }
        if (DEBUG_BOOTSTRAP) fprintf(STDERR,"Script: ".realpath($_SERVER["SCRIPT_FILENAME"])."\n");
        $_init = realpath($_SERVER["SCRIPT_FILENAME"]);
        while(strlen($_init) > 1) {
            if (DEBUG_BOOTSTRAP) fprintf(STDERR,"FindApp: Testing %s/{$appfile} [via %s]\n", $_init, "PHP_SELF");
            if (file_exists($_init."/".$appfile))
                return $_init;
            $_init = dirname($_init);
        }
        $_cwd = getcwd();
        while(strlen($_cwd) > 1) {
            if (DEBUG_BOOTSTRAP) fprintf(STDERR,"FindApp: Testing %s/{$appfile} [via %s]\n", $_cwd, "getcwd()");
            if (file_exists($_cwd."/".$appfile))
                return $_cwd;
            $_cwd = dirname($_cwd);
        }
        $_dir = __DIR__;
        while(strlen($_dir) > 1) {
            if (DEBUG_BOOTSTRAP) fprintf(STDERR,"FindApp: Testing %s/{$appfile} [via %s]\n", $_dir, "__DIR__");
            if (file_exists($_dir."/".$appfile))
                return $_dir;
            $_dir = dirname($_dir);
        }
    }
    throw new \Exception("Unable to find CherryPHP application root");
};

if (!defined("CHERRY_LIB"))
    define("CHERRY_LIB", $findlib());
if (!defined("CHERRY_APP"))
    define("CHERRY_APP", $findapp());
define("__APP__",CHERRY_APP);
define("__SYS__",CHERRY_LIB);
define("__LIB__",CHERRY_LIB."/lib");
define("__ENV__",getenv("env")?:"dev");
if (file_exists(CHERRY_APP . "/config/_setup.php"))
    require_once CHERRY_APP . "/config/_setup.php";

require_once CHERRY_LIB . "/lib/_bootstrap.php";
