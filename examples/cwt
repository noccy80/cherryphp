#!/usr/bin/php
<?php

//LOADER:BEGIN
if (!( @include_once "lib/bootstrap.php" )) {
    $libpath = getenv('CHERRY_LIB');
    if (!$libpath) {
        fprintf(STDERR,"Define the CHERRY_LIB envvar first.");
        exit(1);
    }
    require_once($libpath.'/lib/bootstrap.php');
}
//LOADER:END

\Cherry\BundleManager::load('cherry.cwt');

use Cherry\Cwt\Cwt;
use Cherry\Cwt\Application;
use Cherry\Cwt\Dialog;
use Cherry\Cwt\DialogAction;
use Cherry\Cwt\Widgets\Label;
use Cherry\Cwt\Widgets\ButtonBar;
use Cherry\Cwt\Widgets\MenuBar;
use Cherry\Cwt\Widgets\Menu;
use Cherry\Cwt\Widgets\MenuItem;
use Cherry\Cwt\Widgets\Statusbar;
use Cherry\Cwt\Widgets\Statusbar\BarItem;

class DlgWelcome extends Dialog {
    function __construct() {

        parent::__construct();

        $this->title = "Welcome to CWT";

        $this->dialog->push('welcometext', new Label());
        $this->dialog->welcometext->label =
            "\n".
            "Welcome to Cherry Widget Toolkit!\n".
            "\n";
        $this->dialog->push('buttonbar', new ButtonBar());
        $this->dialog->buttonbar->addButton('ok','Ok',array($this,'close'));

    }
}

class CwtApplication {

    private $cwt = null;

    public $status = 'Welcome to CherryPad 1.0';

    function __construct() {

        $this->cwt = new \Cherry\Cwt\Cwt();
        $this->cwt->on(Cwt::ON_RESIZE, array(&$this,'onResize'));

    }

    function onResize($data) {

    }

    function initMenus($desk) {

        $menubar = new MenuBar();

        $file = new Menu();
        $file->addItem(new MenuItem('mnuFileNew','_New...',null,'c-N'));
        $file->addItem(new MenuItem('mnuFileSave','_Save',MenuItem::MENU_DISABLED,'c-S'));
        $file->addItem(new MenuItem('mnuFileSaveas','Save _as...',null,'m-F9'));
        $file->addSeparator();
        $file->addItem(new MenuItem('mnuFileQuit','_Quit',null,'c-Q'));

        $menubar->addMenu('mnuFile','_File',$file);
        $menubar->addMenu('mnuTools','_Tools',$file);
        $menubar->addMenu('mnuView','_View',$file);
        $menubar->addMenu('mnuOptions','_Options',$file);

        Cwt::cwt()->desktop()->menubar = $menubar;
    }

    function getTicks() {
        static $tick = 0;
        return $tick++;
    }

    function onDebug($str) {
        $dbg = Cwt::cwt()->getDebug();
        for ($n = 0; $n < 10; $n++) {
            ncurses_move(15 + $n, 5);
            ncurses_clrtoeol();
            $idx = count($dbg)-10+$n;
            if ($idx>=0) $s = $dbg[$idx]; else $s = '';
            ncurses_mvaddstr(15 + $n, 5, $s);
        }
    }

    function initStatusbar() {

        $sbr = new StatusBar();
        $sbr->addItem('statustext',
                      new BarItem(BarItem::TYPE_DATASOURCE, array(&$this,'status')),
                      Statusbar::SBR_WIDTH_AUTO);
        $sbr->addItem('counter',
                      new BarItem(BarItem::TYPE_DATASOURCE, array(&$this,'getTicks')),
                      15);
        $sbr->addItem('clock',
                      new BarItem(BarItem::TYPE_CLOCK, "h:i:s"),
                      15);

        Cwt::cwt()->desktop()->statusbar = $sbr;

    }

    function initUi() {

        //$cwt = new \Cherry\Cwt\Cwt();
        // $cwt->on(\Cherry\Cwt\Cwt::EVT_SIGINT, function(){ });
        $desk = new \Cherry\Cwt\Layouts\VerticalStack(array(
            'menubar' => 1,
            'body' => -1,
            'statusbar' => 1
        ));

        $this->cwt->setDesktop($desk);

        $this->initMenus();
        $this->initStatusbar();

        $desk->menubar->on(MenuBar::EVT_CLICK,function(Cwt $cwt,MenuItem $menuitem){
            switch($menuitem->name) {
                case 'mnuFileNew':
                    $cwt->showModal(new DlgNew());
                    break;
                case 'mnuFileSaveas':
                    $dlg = new SaveDialog();
                    $cwt->showModal($dlg);
                    break;
                case 'mnuFileQuit':
                    $cwt->showModal();
                    break;
            }
        });

    }

    function main() {

        $this->initUi();
        $this->cwt->on(Cwt::ON_STARTUP,function(Cwt $cwt){
            $cwt->showModal(new DlgWelcome());
        });
        $this->cwt->on(Cwt::ON_DEBUG, array(&$this,'onDebug'));
        $this->cwt->run();

        \cherry\debug('Cleaning up...');

    }

}

$app = new CwtApplication();
$app->main();
